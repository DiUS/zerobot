{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Single instance with tomcat",

  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type" : "String"
    },
    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "ProjectName" : {
      "Description" : "Name of your project",
      "Type" : "String"
    },
    "EnvironmentName" : {
      "Description" : "Name of the environment",
      "Type" : "String"
    },
    "HostedZone" : {
      "Description" : "The DNS name of an existing Amazon Route 53 hosted zone",
      "Type" : "String",
      "Default" : "dupondi.us"
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" },
      "m1.medium"   : { "Arch" : "64" },
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" },
      "cc1.4xlarge" : { "Arch" : "64HVM" },
      "cc2.8xlarge" : { "Arch" : "64HVM" },
      "cg1.4xlarge" : { "Arch" : "64HVM" }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "32" : "ami-31814f58", "64" : "ami-1b814f72", "64HVM" : "ami-0da96764" },
      "us-west-2"      : { "32" : "ami-38fe7308", "64" : "ami-30fe7300", "64HVM" : "NOT_YET_SUPPORTED" },
      "us-west-1"      : { "32" : "ami-11d68a54", "64" : "ami-1bd68a5e", "64HVM" : "NOT_YET_SUPPORTED" },
      "eu-west-1"      : { "32" : "ami-973b06e3", "64" : "ami-953b06e1", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-southeast-1" : { "32" : "ami-b4b0cae6", "64" : "ami-beb0caec", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-northeast-1" : { "32" : "ami-0644f007", "64" : "ami-0a44f00b", "64HVM" : "NOT_YET_SUPPORTED" },
      "sa-east-1"      : { "32" : "ami-3e3be423", "64" : "ami-3c3be421", "64HVM" : "NOT_YET_SUPPORTED" }
    }
  },

  "Resources" : {


    "WebServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "gcc-c++"      : [],
                "make"         : [],
                "java-1.6.0-openjdk"   : [],
                "java-1.6.0-openjdk-devel"   : [],
                "tomcat7"     : [],
                "tomcat-native"     : [],
                "git.x86_64"   : []
              }
            },
            "services" : {
              "sysvinit" : {
                "tomcat7" : {
                  "enabled" : "true",
                  "ensureRunning" : "true"
                }
              }
            },
            "groups" : {
                "www" : {}
            },
            "users" : {
              "deployer" : {
                "groups" : ["www", "tomcat"],
                "homeDir" : "/home/deployer"
              }
            },
            "files" : {
              "/etc/tomcat7/tomcat7.conf" : {
                "content" : { "Fn::Join" : ["", [
                   "# System-wide configuration file for tomcat services\n",
                   "# This will be sourced by tomcat and any secondary service\n",
                   "# Values will be overridden by service-specific configuration\n",
                   "# files in /etc/sysconfig\n",
                   "#\n",
                   "# Use this one to change default values for all services\n",
                   "# Change the service specific ones to affect only one service\n",
                   "# (see, for instance, /etc/sysconfig/tomcat7)\n",
                   "#\n",
                   "\n",
                   "# Where your java installation lives\n",
                   "JAVA_HOME=\"/usr/lib/jvm/jre\"\n",
                   "\n",
                   "# Where your tomcat installation lives\n",
                   "CATALINA_BASE=\"/usr/share/tomcat7\"\n",
                   "CATALINA_HOME=\"/usr/share/tomcat7\"\n",
                   "JASPER_HOME=\"/usr/share/tomcat7\"\n",
                   "CATALINA_TMPDIR=\"/var/cache/tomcat7/temp\"\n",
                   "\n",
                   "# You can pass some parameters to java here if you wish to\n",
                   "# Use JAVA_OPTS to set java.library.path for libtcnative.so\n",
                   "JAVA_OPTS=\"-Xms768m -Xmx768m -XX:PermSize=512m -XX:MaxPermSize=512m -Djava.library.path=/usr/lib64\"\n",
                   "\n",
                   "# What user should run tomcat\n",
                   "TOMCAT_USER=\"tomcat\"\n",
                   "\n",
                   "# You can change your tomcat locale here\n",
                   "#LANG=\"en_US\"\n",
                   "\n",
                   "# Run tomcat under the Java Security Manager\n",
                   "SECURITY_MANAGER=\"false\"\n",
                   "\n",
                   "# Time to wait in seconds, before killing process\n",
                   "SHUTDOWN_WAIT=\"30\"\n",
                   "\n",
                   "# Whether to annoy the user with \"attempting to shut down\" messages or not\n",
                   "SHUTDOWN_VERBOSE=\"false\"\n",
                   "\n",
                   "# Set the TOMCAT_PID location\n",
                   "CATALINA_PID=\"/var/run/tomcat7.pid\"\n",
                   "\n",
                   "# Connector port is 8080 for this tomcat instance\n",
                   "#CONNECTOR_PORT=\"8080\"\n",
                   "\n",
                   "# If you wish to further customize your tomcat environment,\n",
                   "# put your own definitions here\n",
                   "# (i.e. LD_LIBRARY_PATH for some jdbc drivers)\n"
                    ]]},
                "mode"  : "000644",
                "owner" : "root",
                "group" : "root"
              }
            }
          }
        }
      },

      "Properties": {
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "FrontendGroup"} ],
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",
          "yum update -y aws-cfn-bootstrap\n",

          "# Helper function\n",
          "function error_exit\n",
          "{\n",
          "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "WaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",

          "# Set the time zone\n",
          "ln -s /usr/share/zoneinfo/Australia/Melbourne /etc/localtime\n",

          "# Give the deployer user login rights\n",
          "useradd -m deployer\n",
          "mkdir -p /home/deployer/.ssh\n",
          "echo \"ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAyrBOE3zDQMcoRi9no60foxqEy7EVmAARowko6rERDXCp5tKrY3dOpk0wDyuZgvvq2gfaVRaUuwo1AJwJk43sFb6ZVxRwNZLjIF2dFV+RjQKy1NnPd9ymrZacIOyQXLzFUWsM59JPA6v8zznF826RSBuQIIGESz9n0lhICfO4oIq62Bexllh9O/vU71EKnzFxqq2StNCd5q/tit7AK0GiHnm2OyufBQrGhUjVrCDmXx2X9XX77swHky56z4ZgZk1XdC4EEHE4WariMzryjBPldCXkQGq5x97IC35aeCCVcyDAkQ+5HRxJK/Ja2RYy8f5bsmYRcI06suWGePUQO48Bjw==\" >> /home/deployer/.ssh/authorized_keys\n",
          "curl https://s3.amazonaws.com/private_keys/deployer.pem -o /home/deployer/.ssh/id_rsa\n",
          "chown -R deployer:deployer /home/deployer/.ssh\n",
          "chmod 600 /home/deployer/.ssh/id_rsa /home/deployer/.ssh/authorized_keys\n",
          "su - deployer -c \"ssh -o StrictHostKeyChecking=no git@github.com\"\n",

          "# Give the deployer sudo permission to the dashboard /etc/init.d scripts\n",
          "echo \"deployer ALL=(root)NOPASSWD:/bin/mv,/etc/init.d/tomcat7 *\" > /etc/sudoers.d/deployer\n",
          "chmod 0440 /etc/sudoers.d/deployer\n",

          "# Install packages\n",
          "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackName" }, " -r WebServer ",
          "    --access-key AKIAIB3JD5B24BFQEDVQ",
          "    --secret-key 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",
          "    --region ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",

          "# All is well so signal success\n",
          "/opt/aws/bin/cfn-signal -e 0 -r \"Tomcat application setup\" '", { "Ref" : "WaitHandle" }, "'\n"
        ]]}}
      }
    },

    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "WebServer",
      "Properties" : {
        "Handle" : {"Ref" : "WaitHandle"},
        "Timeout" : "3000"
      }
    },

    "FrontendGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH and HTTP access via port 8080",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : "0.0.0.0/0"
        }, {
          "IpProtocol" : "tcp",
          "FromPort" : "8080",
          "ToPort" : "8080",
          "CidrIp" : "0.0.0.0/0"
        } ]

      }
    },

    "DNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" : [ "", [{"Ref" : "HostedZone"}, "." ]]},
        "Comment" : "CNAME to tomcat instance.",
        "Name" : { "Fn::Join" : [ "", [{"Ref" : "EnvironmentName"}, ".", {"Ref" : "ProjectName"}, ".", {"Ref" : "HostedZone"}, "."]]},
        "Type" : "CNAME",
        "TTL" : "900",
        "ResourceRecords" : [{ "Fn::GetAtt" : [ "WebServer", "PublicDnsName" ]}]
      }
    }
  },

  "Outputs" : {
    "WebsiteURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", {"Ref" : "EnvironmentName"}, ".", {"Ref" : "ProjectName"}, ".", {"Ref" : "HostedZone"}, ":8080"]] },
      "Description" : "URL for newly created Tomcat webserver"
    }
  }
}
