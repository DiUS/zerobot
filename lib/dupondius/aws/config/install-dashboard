#!/bin/sh
set -x
set -e

# Make sure only root can run our script
if [ "$(id -u)" != "0" ]; then
echo "This script must be run as root" 1>&2
    exit 1
fi


RAILS_ENV=production
DEPLOY_TO=/opt/app/zerobot
RELEASES_PATH=/opt/app/zerobot/releases
RELEASE_PATH=/opt/app/zerobot/releases/master
SHARED_PATH=/opt/app/zerobot/shared
CURRENT_PATH=/opt/app/zerobot/current
APPLICATION=zerobot

GITHUB_PACKAGE_PATH=https://nodeload.github.com/DiUS/zerobot/zip/master
DOWNLOAD_PACKAGE_PATH="/tmp/master.zip"
DECOMPRESS_CMD="unzip /tmp/master.zip"

mkdir -p $DEPLOY_TO
mkdir -p $RELEASES_PATH
mkdir -p ${SHARED_PATH}
mkdir -p ${SHARED_PATH}/system
mkdir -p ${SHARED_PATH}/log
mkdir -p ${SHARED_PATH}/pids

touch ${SHARED_PATH}/log/${RAILS_ENV}.log
chmod 0666 ${SHARED_PATH}/log/${RAILS_ENV}.log
chmod -R g+w ${DEPLOY_TO}

curl -o ${DOWNLOAD_PACKAGE_PATH} ${GITHUB_PACKAGE_PATH} 2>&1

cd ${RELEASES_PATH} && ${DECOMPRESS_CMD} && mv zerobot-master master

# cap deploy:assets_symlink
rm -rf ${RELEASE_PATH}/public/assets
mkdir -p ${RELEASE_PATH}/public
mkdir -p ${DEPLOY_TO}/shared/assets
ln -s ${SHARED_PATH}/assets ${RELEASE_PATH}/public/assets

# cap deploy:finalize_update
chmod -R g+w ${RELEASE_PATH}
rm -rf ${RELEASE_PATH}/log
rm -rf ${RELEASE_PATH}/public/system
rm -rf ${RELEASE_PATH}/tmp/pids
mkdir -p ${RELEASE_PATH}/public
mkdir -p ${RELEASE_PATH}/tmp
ln -s ${SHARED_PATH}/system ${RELEASE_PATH}/public/system
ln -s ${SHARED_PATH}/log ${RELEASE_PATH}/log
ln -s ${SHARED_PATH}/pids ${RELEASE_PATH}/tmp/pids

# AFTER: cap deploy:finalize_update
cd ${RELEASE_PATH}
bundle install --gemfile ${RELEASE_PATH}/Gemfile --path ${SHARED_PATH}/bundle --deployment --quiet --without development test

# AFTER: cap deploy:update_code
cd ${RELEASE_PATH}
source /etc/default/app
export DB_NAME
export DB_USERNAME
export DB_PASSWORD
export DB_SOCKET

bundle exec rake RAILS_ENV=${RAILS_ENV} db:create db:migrate
bundle exec rake RAILS_ENV=${RAILS_ENV} RAILS_GROUPS=assets assets:precompile


# cap deploy:create_symlink
rm -f ${CURRENT_PATH}
ln -s ${RELEASE_PATH} ${CURRENT_PATH}

# remove cloudformation user-data scripts otherwise they get run when AMI is created
rm -f /var/lib/cloud/data/scripts/*
rm -f /var/lib/cloud/data/*.*
