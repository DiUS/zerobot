#!/bin/sh

# Standalone app install script
# for a multi instance rails environment
# where the web server are behind the ELBj
#

# Make sure only root can run our script
if [ "$(id -u)" != "0" ]; then
echo "This script must be run as root" 1>&2
    exit 1
fi

source /etc/default/app

app_name=$PROJECT_NAME
github_project=$PROJECT_NAME
if [ $github_project == "dupondius" ]; then
  github_project="dashboard"
fi

echo "UserKnownHostsFile /dev/null" >> /home/deployer/.ssh/config
echo "StrictHostKeyChecking no" >> /home/deployer/.ssh/config
chown deployer:deployer /home/deployer/.ssh/config
su - deployer -c "chmod 600 /home/deployer/.ssh/config"
su - deployer -c "mkdir -p /opt/app/$app_name/shared/log"
su - deployer -c "mkdir -p /opt/app/$app_name/shared/pids"
su - deployer -c "cd /opt/app/$app_name && git clone --depth 1 git@github.com:$PROJECT_GITHUB_USER/$github_project.git current"
su - deployer -c "cd /opt/app/$app_name/current && bundle install --path vendor/bundle --deployment --without development test"
su - deployer -c "cd /opt/app/$app_name/current && bundle exec rake RAILS_ENV=production RAILS_GROUPS=assets DB_NAME=$DB_NAME DB_USERNAME=$DB_USERNAME DB_PASSWORD=$DB_PASSWORD DB_HOST=$DB_HOST DB_PORT=$DB_PORT assets:precompile"
su - deployer -c "cd /opt/app/$app_name/current && bundle exec rake RAILS_ENV=production DB_NAME=$DB_NAME DB_USERNAME=$DB_USERNAME DB_PASSWORD=$DB_PASSWORD DB_HOST=$DB_HOST DB_PORT=$DB_PORT db:migrate"

# Generate initd scripts
su - deployer -c "cd /opt/app/$app_name/current && bundle exec foreman export initscript /tmp -e /etc/default/app -f ./Procfile.production -a $app_name -u deployer -l /opt/app/$app_name/current/log"
mv /tmp/$app_name /etc/init.d
chmod +x /etc/init.d/$app_name
chkconfig $app_name on

# Go
/etc/init.d/$app_name restart

